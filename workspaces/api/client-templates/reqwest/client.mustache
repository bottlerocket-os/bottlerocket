{{>partial_header}}
use std::rc::Rc;

use super::configuration::Configuration;

use super::default_api;

pub struct APIClient {
    configuration: Rc<Configuration>,
{{#apiInfo}}
{{#apis}}
{{#operations}}
{{#operation}}
    {{#-last}}
    {{{classFilename}}}: Box<default_api::{{{classname}}}>,
    {{/-last}}
{{/operation}}
{{/operations}}
{{/apis}}
{{/apiInfo}}
}

impl APIClient {
    pub fn new(configuration: Configuration) -> APIClient {
        let rc = Rc::new(configuration);

        APIClient {
            configuration: rc.clone(),
{{#apiInfo}}
{{#apis}}
{{#operations}}
{{#operation}}
            {{#-last}}
            {{{classFilename}}}: Box::new(default_api::{{{classname}}}Client::new(rc.clone())),
            {{/-last}}
{{/operation}}
{{/operations}}
{{/apis}}
{{/apiInfo}}
        }
    }

{{#apiInfo}}
{{#apis}}
{{#operations}}
{{#operation}}
{{#-last}}
    pub fn {{{classFilename}}}(&self) -> &default_api::{{{classname}}}{
        self.{{{classFilename}}}.as_ref()
    }

{{/-last}}
{{/operation}}
{{/operations}}
{{/apis}}
{{/apiInfo}}
}
