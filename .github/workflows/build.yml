name: Build
on:
  pull_request:
    branches: [develop]
    # Here we list file types that don't affect the build and don't need to use
    # up our Actions runners.
    paths-ignore:
      # draw.io (diagrams.net) files, the source of png images for docs
      - '**.drawio'
      # Example configuration files
      - '**.example'
      # Markdown documentation
      - '**.md'
      # Images for documentation
      - '**.png'
      # Templates for README files
      - '**.tpl'
      # Sample config files and OpenAPI docs
      - '**.yaml'

jobs:
  build:
    runs-on: [self-hosted, linux, x64]
    continue-on-error: ${{ matrix.supported }}
    strategy:
      matrix:
        variant: [aws-k8s-1.19, aws-k8s-1.20, aws-k8s-1.21, aws-k8s-1.22, aws-k8s-1.23, aws-ecs-1, aws-ecs-1.1]
        arch: [x86_64, aarch64]
        supported: [true]
        fetch-upstream: ["false"]
        include:
          - variant: aws-dev
            arch: x86_64
            supported: false
            fetch-upstream: "false"
          - variant: vmware-dev
            arch: x86_64
            supported: false
            fetch-upstream: "false"
          - variant: metal-dev
            arch: x86_64
            supported: false
            fetch-upstream: "false"
          - variant: metal-k8s-1.21
            arch: x86_64
            supported: false
            fetch-upstream: "false"
          - variant: metal-k8s-1.22
            arch: x86_64
            supported: false
            fetch-upstream: "false"
          - variant: metal-k8s-1.23
            arch: x86_64
            supported: false
            fetch-upstream: "false"
          - variant: vmware-k8s-1.20
            arch: x86_64
            supported: true
            fetch-upstream: "false"
          - variant: vmware-k8s-1.21
            arch: x86_64
            supported: true
            fetch-upstream: "false"
          - variant: vmware-k8s-1.22
            arch: x86_64
            supported: true
            fetch-upstream: "false"
          - variant: vmware-k8s-1.23
            arch: x86_64
            supported: true
            fetch-upstream: "false"
          - variant: aws-k8s-1.21-nvidia
            arch: x86_64
            supported: true
            fetch-upstream: "true"
          - variant: aws-k8s-1.21-nvidia
            arch: aarch64
            supported: true
            fetch-upstream: "true"
          - variant: aws-k8s-1.22-nvidia
            arch: x86_64
            supported: true
            fetch-upstream: "true"
          - variant: aws-k8s-1.22-nvidia
            arch: aarch64
            supported: true
            fetch-upstream: "true"
          - variant: aws-k8s-1.23-nvidia
            arch: x86_64
            supported: true
            fetch-upstream: "true"
          - variant: aws-k8s-1.23-nvidia
            arch: aarch64
            supported: true
            fetch-upstream: "true"
          - variant: aws-ecs-1-nvidia
            arch: x86_64
            supported: true
            fetch-upstream: "true"
          - variant: aws-ecs-1-nvidia
            arch: aarch64
            supported: true
            fetch-upstream: "true"
          - variant: aws-ecs-1.1-nvidia
            arch: x86_64
            supported: true
            fetch-upstream: "true"
          - variant: aws-ecs-1.1-nvidia
            arch: aarch64
            supported: true
            fetch-upstream: "true"
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - run: rustup default 1.61.0
      - run: cargo install --version 0.35.12 cargo-make
      - if: contains(matrix.variant, 'nvidia')
        run: |
          cat <<-EOF > Licenses.toml
          [nvidia]
          spdx-id = "LICENSE-LicenseRef-NVIDIA-Customer"
          licenses = [
            { path = "NVIDIA", license-url = "https://www.nvidia.com/en-us/drivers/nvidia-license/" }
          ]
          EOF
      - run: cargo make -e BUILDSYS_VARIANT=${{ matrix.variant }} unit-tests
      - run: cargo make -e BUILDSYS_VARIANT=${{ matrix.variant }} check-fmt
      - run: |
          cargo make -e BUILDSYS_VARIANT=${{ matrix.variant }} \
            -e BUILDSYS_ARCH=${{ matrix.arch }} \
            -e BUILDSYS_JOBS=12 \
            -e BUILDSYS_UPSTREAM_SOURCE_FALLBACK=${{ matrix.fetch-upstream }} \
            -e BUILDSYS_UPSTREAM_LICENSE_FETCH=${{ matrix.fetch-upstream }}
