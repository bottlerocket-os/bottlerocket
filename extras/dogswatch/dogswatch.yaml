apiVersion: v1
kind: Namespace
metadata:
  name: bottlerocket
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bottlerocket-dogswatch-controller
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  # Allow the controller to remove Pods running on the Nodes that are updating.
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bottlerocket-dogswatch-controller
subjects:
  - kind: ServiceAccount
    name: dogswatch-controller
    namespace: bottlerocket
roleRef:
  kind: ClusterRole
  name: bottlerocket-dogswatch-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bottlerocket-dogswatch-agent
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bottlerocket-dogswatch-agent
subjects:
  - kind: ServiceAccount
    name: dogswatch-agent
    namespace: bottlerocket
roleRef:
  kind: ClusterRole
  name: bottlerocket-dogswatch-agent
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dogswatch-controller
  namespace: bottlerocket
  annotations:
    kubernetes.io/service-account.name: dogswatch-controller
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dogswatch-agent
  namespace: bottlerocket
  annotations:
    kubernetes.io/service-account.name: dogswatch-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dogswatch-controller
  namespace: bottlerocket
  labels:
    name: dogswatch-controller
    app: dogswatch-controller
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 100%
  selector:
    matchLabels:
      app: dogswatch-controller
  template:
    metadata:
      namespace: bottlerocket
      labels:
        name: dogswatch-controller
        app: dogswatch-controller
    spec:
      serviceAccountName: dogswatch-controller
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: bottlerocket.amazonaws.com/platform-version
                    operator: Exists
                  - key: "kubernetes.io/os"
                    operator: In
                    values:
                      - linux
                  - key: "kubernetes.io/arch"
                    operator: In
                    values:
                      - amd64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 10
              podAffinityTerm:
                topologyKey: bottlerocket.amazonaws.com/platform-version
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values: ["dogswatch-agent"]
      containers:
      - name: dogswatch
        image: "328549459982.dkr.ecr.us-west-2.amazonaws.com/dogswatch:v0.1.1"
        imagePullPolicy: Always
        args:
          - -controller
          - -debug
          - -nodeName
          - $(NODE_NAME)
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dogswatch-agent
  namespace: bottlerocket
  labels:
    dogswatch: agent
spec:
  selector:
    matchLabels:
      name: dogswatch-agent
  template:
    metadata:
      labels:
        name: dogswatch-agent
        app: dogswatch-agent
    spec:
      serviceAccountName: dogswatch-agent
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: bottlerocket.amazonaws.com/platform-version
                    operator: Exists
                  - key: "kubernetes.io/os"
                    operator: In
                    values:
                      - linux
                  - key: "kubernetes.io/arch"
                    operator: In
                    values:
                      - amd64
      hostPID: true
      containers:
        - name: dogswatch
          image: "328549459982.dkr.ecr.us-west-2.amazonaws.com/dogswatch:v0.1.1"
          imagePullPolicy: Always
          # XXX: tty required to exec binaries that use `simplelog` until #576 is resolved.
          tty: true
          args:
            - -agent
            - -debug
            - -nodeName
            - $(NODE_NAME)
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            # Required for executing OS update operations.
            privileged: true
          resources:
            limits:
              memory: 600Mi
            requests:
              cpu: 100m
              memory: 600Mi
          volumeMounts:
            - name: rootfs
              mountPath: /.bottlerocket/rootfs
      volumes:
        - name: rootfs
          hostPath:
            path: /
            type: Directory

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dogswatch-agent-arm64
  namespace: bottlerocket
  labels:
    dogswatch: agent
spec:
  selector:
    matchLabels:
      name: dogswatch-agent
  template:
    metadata:
      labels:
        name: dogswatch-agent
        app: dogswatch-agent
    spec:
      serviceAccountName: dogswatch-agent
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: bottlerocket.amazonaws.com/platform-version
                    operator: Exists
                  - key: "kubernetes.io/os"
                    operator: In
                    values:
                      - linux
                  - key: "kubernetes.io/arch"
                    operator: In
                    values:
                      - arm64
      hostPID: true
      containers:
        - name: dogswatch
          image: "328549459982.dkr.ecr.us-west-2.amazonaws.com/dogswatch-arm64:v0.1.1"
          imagePullPolicy: Always
          # XXX: tty required to exec binaries that use `simplelog` until #576 is resolved.
          tty: true
          args:
            - -agent
            - -debug
            - -nodeName
            - $(NODE_NAME)
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            # Required for executing OS update operations.
            privileged: true
          resources:
            limits:
              memory: 600Mi
            requests:
              cpu: 100m
              memory: 600Mi
          volumeMounts:
            - name: rootfs
              mountPath: /.bottlerocket/rootfs
      volumes:
        - name: rootfs
          hostPath:
            path: /
            type: Directory

